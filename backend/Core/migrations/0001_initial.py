# Generated by Django 4.2.4 on 2023-09-17 15:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("Student", "0009_students_user"),
        ("Challenge", "0007_alter_portfolio_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="AllTracker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("student", models.CharField(blank=True, max_length=255, null=True)),
                ("school", models.CharField(max_length=255)),
                ("challenge", models.CharField(blank=True, max_length=255, null=True)),
                ("committee", models.CharField(blank=True, max_length=255, null=True)),
                ("portfolio", models.CharField(blank=True, max_length=255, null=True)),
                ("add_on", models.CharField(blank=True, max_length=255, null=True)),
                ("team", models.CharField(blank=True, max_length=100, null=True)),
                ("preference", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("remarks", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="MUNChallengeTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("NF", "Not filled"),
                            ("AW", "Awaiting"),
                            ("AL", "Alloted"),
                        ],
                        default="NF",
                        max_length=2,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("remarks", models.TextField()),
                (
                    "all_tracker",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mun_to_alltracker",
                        to="Core.alltracker",
                    ),
                ),
                (
                    "committee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Challenge.committee",
                    ),
                ),
                (
                    "portfolio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Challenge.portfolio",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Student.school",
                    ),
                ),
                (
                    "student",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Student.students",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ImpactChallengeTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("NF", "Not filled"),
                            ("AW", "Awaiting"),
                            ("AL", "Alloted"),
                        ],
                        default="NF",
                        max_length=2,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("remarks", models.TextField()),
                (
                    "all_tracker",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ic_to_alltracker",
                        to="Core.alltracker",
                    ),
                ),
                (
                    "committee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Challenge.committee",
                    ),
                ),
                (
                    "portfolio",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Challenge.portfolio",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Student.school",
                    ),
                ),
                (
                    "student",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Student.students",
                    ),
                ),
            ],
        ),
    ]
